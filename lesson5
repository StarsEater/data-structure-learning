              Vector      List
search        efficient   inefficient
insert/remove inefficient efficient

        二叉树：
          树是特殊的图，节点数|V|=n 边数|E|=e
                r
                |
             / | | \
            r1 r2 r3... rd 
            ri称作r的孩子(child)，ri之间互称兄弟(sibling),r为父亲(parent)
            d=degree(r) 为 r的（出）度
           边数之和等于度数之和等于顶点数-1=O(n)
           在兄弟之间定义次序的树称为有序树。
           
           路径长度：|pi| =边数
           深度是到根节点的距离
           所有叶子深度中最大者称作（子）树（根）的高度，空树高度为-1
           树的表示方法：
             1 父亲 + 孩子 
             2 长子 + 兄弟
           节点度数不超过2的树，称作二叉树  
           lchild() ~ lSubtree
           rchild() ~ rSubtree
           深度为k的节点，至多2^k个
           含n个节点、高度为h的二叉树中 h < n < 2 ^(h + 1)
           1) n = h + 1; 退化为一条单链
           2) n = 2^(h+1) -1;即所谓的满二叉树
           
           真二叉树
           假想添加出度为0，使出度节点数变为2
           
           多叉树
           二叉树是多叉树的特例，但在有根、有序时，其描述能力足以覆盖后者，方法 长子-兄弟 表示法
           
            |
           / \
          fc  ns  
        BinNode 
